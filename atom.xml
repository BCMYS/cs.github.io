<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://BCMYS.github.io</id>
    <title>一笑置之的博客</title>
    <updated>2020-08-23T11:33:24.121Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://BCMYS.github.io"/>
    <link rel="self" href="https://BCMYS.github.io/atom.xml"/>
    <subtitle>The world&apos;s full of lonely people afraid to make the first move.
世界上有太多孤独的人害怕先踏出第一步。</subtitle>
    <logo>https://BCMYS.github.io/images/avatar.png</logo>
    <icon>https://BCMYS.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 一笑置之的博客</rights>
    <entry>
        <title type="html"><![CDATA[下车代码]]></title>
        <id>https://BCMYS.github.io/post/xia-che-dai-ma/</id>
        <link href="https://BCMYS.github.io/post/xia-che-dai-ma/">
        </link>
        <updated>2020-08-23T11:30:37.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li></li>
</ol>
<p>world.querySelectorAll('.还原').forEach((e)=&gt;{//以带标签还原的模型为触发条遍历循环<br>
e.onEntityContact(({entity,other})=&gt;{//设置目标模型的碰撞事件.<br>
if(!other.isPlayer){return} //防止非玩家实体参与检测.<br>
other.mesh=other;  //还原原造型<br>
other.player.invisible=false;//取消隐身<br>
other.player.canFly = false;//取消飞行<br>
other.player.scale = 1;//还原原形状，大小<br>
other.player.runSpeed=0.5;//还原原速度<br>
world.say(other.player.name+&quot;还原了自己&quot;);//广播信息<br>
})<br>
})</p>
<ol start="2">
<li></li>
</ol>
<p>world.onChat(({ entity, message }) =&gt; {//如果有人在聊天板说话，检测<br>
if (entity &amp;&amp; entity.isPlayer) {//如果说话者为玩家<br>
if (message === '我要下车') {//且内容为“我要下车”，触发……<br>
other.mesh=other;  //还是还原原造型<br>
other.player.invisible=false;//还是取消隐身<br>
other.player.canFly = false;//还是取消飞行<br>
other.player.scale = 1;//还原原形状，大小（不想多说了）<br>
other.player.runSpeed=0.5;//还原原速度<br>
world.say(other.player.name+&quot;还原了自己&quot;);//广播信息<br>
}<br>
})</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[随机出生点]]></title>
        <id>https://BCMYS.github.io/post/sui-ji-chu-sheng-dian/</id>
        <link href="https://BCMYS.github.io/post/sui-ji-chu-sheng-dian/">
        </link>
        <updated>2020-08-23T11:27:34.000Z</updated>
        <content type="html"><![CDATA[<pre><code>// 遍历地图, 寻找合适出生点
for (let x = XZ_BEGIN; x &lt; XZ_END; x++) {
    for (let z = XZ_BEGIN; z &lt; XZ_END; z++) {
        let i = 0;
        while (i &lt; PLAYER_HEIGHT &amp;&amp; voxels.getVoxel(x, i + GROUND_Y, z) === 0) i++;
        // 如果(x, GROUND_Y, z)有足够空间容纳玩家, 则将其纳入出生点
        if (i === PLAYER_HEIGHT) {
            spawnPoints.push([x, GROUND_Y + 2, z])
        }
    }
}</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[简单的自动保存玩家数据使实现多设备漫游的代码]]></title>
        <id>https://BCMYS.github.io/post/jian-dan-de-zi-dong-bao-cun-wan-jia-shu-ju-shi-shi-xian-duo-she-bei-man-you-de-dai-ma/</id>
        <link href="https://BCMYS.github.io/post/jian-dan-de-zi-dong-bao-cun-wan-jia-shu-ju-shi-shi-xian-duo-she-bei-man-you-de-dai-ma/">
        </link>
        <updated>2020-08-23T11:04:12.000Z</updated>
        <content type="html"><![CDATA[<p>var save_value = {};<br>
function save(player,value){<br>
save_value[player] = value;<br>
}</p>
<p>world.onPlayerJoin(({ entity }) =&gt; {<br>
if(entity.isPlayer &amp;&amp; entity.player.name in save_value){<br>
entity.player.currency = save_value[entity.player.name];<br>
entity.player.directMessage(<code>检测到你有存档，存档金币数量为${entity.player.currency}，你为你自动恢复存档</code>)<br>
}<br>
else{<br>
entity.player.currency = 0;<br>
entity.player.directMessage('你没有存档！')<br>
}<br>
});</p>
<p>world.querySelectorAll('.金币').forEach((e)=&gt;{<br>
e.onEntityContact(({entity,other})=&gt;{<br>
if(!other.isPlayer){return}<br>
other.player.currency+=1;<br>
save(other.player.name,other.player.currency);<br>
world.say(<code>你的金币数量为${other.player.currency}</code>)<br>
})<br>
})</p>
]]></content>
    </entry>
</feed>